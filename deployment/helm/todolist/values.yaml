# Default values for todolist.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

#ingress:
#  enabled: false
#  annotations: {}
#  # kubernetes.io/ingress.class: nginx
#  # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths: []
#
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


app:
  deployment:
    name: app-deploy
    labels:
      app: app-deployment
    replicas: 4
    template:
      labels:
        app: app
        role: backend
      containers:
        name: app-container
        image: nsnikhil/todolist:v0.12
        ports:
          containerPort: 8080
  service:
    name: app-svc
    protocol: TCP
    port: 8080
    targetPort: 8080
    type: NodePort


db:
  deployment:
    name: db-deploy
    labels:
      app: db-deployment
    replicas: 4
    template:
      labels:
        app: db
        role: database
      containers:
        name: db-container
        image: postgres:alpine
        ports:
          containerPort: 5432
  service:
    name: db-svc
    protocol: TCP
    port: 5432
    targetPort: 5432

ingress:
  name: ingress
  annotations: {
    nginx.ingress.kubernetes.io/rewrite-target: /,
    nginx.ingress.kubernetes.io/use-regex: "true"
  }
  path: /


